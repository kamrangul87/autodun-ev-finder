"use strict";(()=>{var e={};e.id=129,e.ids=[129],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2743:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>g,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>l,staticGenerationAsyncStorage:()=>c});var a={};r.r(a),r.d(a,{GET:()=>p,dynamic:()=>i});var s=r(9303),n=r(8716),o=r(3131);let i="force-dynamic";async function p(e){let t=(e.nextUrl.searchParams.get("q")||"").trim();if(!t)return new Response(JSON.stringify({error:"q required"}),{status:400});try{let e=new URL("https://nominatim.openstreetmap.org/search");e.searchParams.set("q",t),e.searchParams.set("format","json"),e.searchParams.set("limit","1");let r=await fetch(e.toString(),{headers:{"User-Agent":"Autodun EV Finder"},cache:"no-store"}),a=await r.json();if(!Array.isArray(a)||!a.length)return new Response(JSON.stringify({error:"no results"}),{status:404});let s=a[0];return new Response(JSON.stringify({lat:s.lat,lon:s.lon,display_name:s.display_name}),{headers:{"content-type":"application/json"}})}catch(e){return new Response(JSON.stringify({error:"geocode failed"}),{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/geocode/route",pathname:"/api/geocode",filename:"route",bundlePath:"app/api/geocode/route"},resolvedPagePath:"/workspaces/autodun-ev-finder/app/api/geocode/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:l}=u,m="/api/geocode/route";function g(){return(0,o.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:c})}},9303:(e,t,r)=>{e.exports=r(517)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[948],()=>r(2743));module.exports=a})();