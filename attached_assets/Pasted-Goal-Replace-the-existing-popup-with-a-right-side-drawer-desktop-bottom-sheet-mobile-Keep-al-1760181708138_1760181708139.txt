Goal: Replace the existing popup with a right-side drawer (desktop) / bottom sheet (mobile). Keep all map/data logic intact. Do not modify heatmap, markers, council fetch, clustering, or OSM layers. Only replace the feedback popup UI and its placement/behavior.

Acceptance criteria (must all pass):

Drawer opens from the right (desktop, fixed 380px) / bottom sheet (mobile) when a station marker/cluster is clicked.

Opaque white panel (not transparent). Panel has shadow, rounded corners (mobile), and scrolls internally; the map does not shift or resize.

Content order (top→down): Station name, address, “Connectors” line, Good/Bad buttons, comment textarea (optional), “Submit feedback” (primary) + “Cancel” (secondary), “Get directions →”.

Close via “×” icon in header, Cancel button, or pressing ESC. Focus returns to the last focused map marker.

Drawer state is controlled by React state only; no URL param changes; does not center or nudge the map.

Mobile: sheet height ~55–60% viewport with a small drag handle at top; drawer content scrolls; map stays interactive behind sheet.

Style baseline: light theme, neutral gray borders (#D2D7DF), white background (#FFF), header background (#F8FAFC), shadows (e.g., box-shadow: 0 10px 30px rgba(0,0,0,.12)).

No new packages, no env var changes, no API changes. Keep all existing endpoints and telemetry intact.

No changes to heatmap/markers/council layers, clustering, “Locate me” button, or search behavior.

If the drawer is open and the user clicks another marker, the drawer updates in place (no flicker, no re-center).

Implementation (example file hooks):

Create a components/StationDrawer.tsx and import it only where the current popup is handled (e.g., Map.jsx / Map.tsx or the map page component).

The drawer receives a station object (or null) and a onClose() handler.

Replace the current Leaflet popup open/close with setting selectedStation state and rendering <StationDrawer station={...} onClose={...} />.

Keep existing feedback submit API call exactly as is—just wire the new form to the same function.

Minimal CSS (tailwind or CSS):

Drawer (desktop): fixed; top: 70px; right: 0; width: 380px; height: calc(100vh - 70px); background: #fff; border-left: 1px solid #E5E9F2; box-shadow: 0 10px 30px rgba(0,0,0,.12); overflow: auto; z-index above the Leaflet controls.

Header: 60px height; background: #F8FAFC; sticky top; border-bottom: 1px solid #E5E9F2.

Mobile sheet: fixed; left: 0; right: 0; bottom: 0; height: 55vh; border-radius: 16px 16px 0 0; same shadow; internal scroll.

UI spec to match the mocks:

Good/Bad buttons: pill style. Good: border #2EAE62, bg #E7FCEE, text #2EAE62. Bad: border #DC2E2E, bg #FFEAEA, text #C32222.

Textarea: rounded; subtle border; placeholder “Optional comment… e.g., broken connector, blocked bay, pricing issue.”

Primary button: solid blue (#2563EB) white text; Secondary: white bg with subtle gray border.

“Get directions →”: simple link style (blue) under buttons.

Keyboard & a11y:

Trap focus in the drawer; ESC closes; pressing TAB cycles within the drawer controls.

aria-labelledby on header title; buttons have aria-pressed for Good/Bad selection.

Do not change (repeat):

Do not change heatmap/markers/council rendering or fetching.

Do not change map center/zoom behavior.

Do not add new packages or env vars.

Do not adjust tile providers or clustering logic.

Do not remove the existing “Locate me” button.

Testing checklist:

Open map, click several markers—drawer updates in place (no flicker, no re-center).

Submit feedback—same endpoint is called; success toast or small inline confirmation (do not reload map).

Resize to mobile—sheet appears; drag handle visible; content scrolls; map remains interactive.

ESC and Cancel both close the drawer; focus returns to previous marker.

No console errors; no style regression on toolbar; legend remains visible.

If you follow this 1:1 and use the attached mocks as the reference for spacing and order, the drawer will be stable and user friendly without risking the rest of the app.